---
import Icon from '@/components/common/Icon.astro'
import OuccImage from '@/assets/oucc.svg'
import LinkButton from '@/components/common/button/LinkButton.astro'
import Navigation from './Navigation.astro'

interface Props {
  showJoinLink?: boolean
  isSticky?: boolean
  rootPath?: string
  headerTitle?: string
}

const {
  showJoinLink = false,
  isSticky = true,
  rootPath = '/',
  headerTitle,
} = Astro.props
---

<header
  class:list={[
    'z-10 flex h-16 justify-between border-b bg-white pr-5',
    {
      'sticky top-0': isSticky,
    },
  ]}
>
  <div class="flex">
    <button
      id="navigation-dialog-open"
      class="mx-5 flex items-center text-slate-500"
    >
      <Icon
        name="hamburger_menu"
        alt="ナビゲーションメニューを開く"
        class="w-5"
      />
    </button>
    <a href={rootPath} class="flex basis-0 items-center">
      <span class="h-full">
        <OuccImage role="img" aria-label="OUCC" class="aspect-square h-full" />
      </span>
      {headerTitle && <h1 class="mx-4 text-4xl font-bold">{headerTitle}</h1>}
    </a>
  </div>
  <div class="flex shrink-0 flex-col justify-center">
    {showJoinLink && <LinkButton href="/join/">Join OUCC!</LinkButton>}
  </div>
  {
    /**
     * transition-behavior, overlay, @starting-style, popover APIがChrome以外でも使えるようになったらもう少しマシなコードになるはず
     * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog#animating_dialogs
     */
  }
  <dialog
    id="navigation-dialog"
    data-active="false"
    class:list={[
      'group m-0 h-full max-h-none w-full max-w-none bg-transparent p-0 backdrop:bg-transparent',
      'transition-[backdrop-filter] duration-[400ms] ease-[cubic-bezier(0.2,0.95,0.5,1)] data-[active=true]:backdrop-blur-sm',
    ]}
  >
    <div
      class:list={[
        'h-full w-64 drop-shadow-[2px_0_4px_rgba(0,0,0,0.5)]',
        '-translate-x-full transition-transform duration-[400ms] ease-[cubic-bezier(0.2,0.95,0.5,1)] group-data-[active=true]:translate-x-0',
      ]}
    >
      <Navigation />
    </div>
  </dialog>
</header>

<script>
  import { disableScroll, enableScroll } from '@/utils/controlScroll'

  const dialogOpenButton = document.getElementById('navigation-dialog-open')
  const dialog = document.getElementById('navigation-dialog')

  if (dialogOpenButton === null) {
    throw new Error('#navigation-dialog-open element not found')
  }
  if (dialog === null) {
    throw new Error('#navigation-dialog element not found')
  }
  if (!(dialog instanceof HTMLDialogElement)) {
    throw new Error('#navigation-dialog is not a <dialog> element')
  }

  const requestOpenDialog = () => {
    dialog.showModal()
    dialog.dataset.active = 'true'
    disableScroll()
  }
  const requestCloseDialog = () => {
    dialog.dataset.active = 'false'
    enableScroll()
  }

  dialogOpenButton.addEventListener('click', requestOpenDialog)

  dialog.addEventListener('click', (e) => {
    if (e.target === dialog) {
      requestCloseDialog()
    }
  })
  dialog.addEventListener('cancel', (e) => {
    requestCloseDialog()
    e.preventDefault()
  })

  dialog.addEventListener('transitionend', () => {
    if (dialog.dataset.active === 'false') {
      dialog.close()
    }
  })
</script>

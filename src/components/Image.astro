---
import type { ImageMetadata } from 'astro'
import type { HTMLAttributes } from 'astro/types'
import { getImage } from 'astro:assets'

type Props = Omit<HTMLAttributes<'img'>, 'src' | 'srcset'> & {
  src: ImageMetadata | Promise<{ default: ImageMetadata }>
  widths?: number[]
}

const { widths = [3840, 1920, 960, 480, 240], ...attrs } = Astro.props

const { src, attributes } = await getImage(attrs)

const originalWidth = parseInt(attributes.width, 10)
const srcset = (
  await Promise.all(
    widths
      .filter((width) => width < originalWidth)
      .map(async (width) => {
        const { src } = await getImage({ ...attrs, width })
        return `${src} ${width}w`
      }),
  )
).join(',')
---

<img src={src} srcset=`${src} ${originalWidth}w,${srcset}` {...attributes} />

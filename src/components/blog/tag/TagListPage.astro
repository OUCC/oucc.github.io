---
import BlogLayout from '@/layouts/BlogLayout.astro'
import { getCollection } from 'astro:content'
import { getTagStatistics } from '@/content/_blog-statistics'
import TagListSection from '@/components/blog/tag/TagListSection.astro'
import type { TagNavCategory } from './TagCategoryNav.astro'
import TagCategoryNav from './TagCategoryNav.astro'

interface Props {
  category: TagNavCategory
}

const { category } = Astro.props
const [tagEntries, statistics] = await Promise.all([
  getCollection('tags'),
  getTagStatistics(),
] as const)

const tags = tagEntries
  .filter((tag) => category === 'all' || category === tag.data.category)
  .map((tag) => ({
    ...tag,
    articleCount: statistics[tag.id].length,
    lastPostedTime: statistics[tag.id][0]?.time ?? 0,
  }))
tags.sort((tag1, tag2) =>
  tag2.articleCount !== tag1.articleCount
    ? tag2.articleCount - tag1.articleCount
    : tag2.lastPostedTime - tag1.lastPostedTime,
)
---

<BlogLayout title="タグ一覧" description="ブログのタグ一覧です。">
  <!-- 右側のスクロールバーを常時表示させるために min-h-[80vh] -->
  <main class="flex min-h-[80vh] flex-col">
    <TagListSection title="タグ一覧" tags={tags}>
      <Fragment slot="nav">
        <TagCategoryNav category={category} />
      </Fragment>
    </TagListSection>
  </main>
</BlogLayout>

---
import type {
  BreadcrumbList,
  Organization,
  WebSite,
  WithContext,
} from 'schema-dts'
import Header from '@/components/nav/Header.astro'
import Footer from '@/components/Footer.astro'
import StructuredData from '@/components/StructuredData.astro'

export interface Props {
  title?: string
  description: string
  showJoinLink?: boolean
}

if (Astro.site === undefined) {
  throw new Error('Astro.siteが未定義です。astro.config.tsで設定してください。')
}

const { title, description, showJoinLink = false } = Astro.props

const canonicalURL = new URL(Astro.url.pathname, Astro.site)
const logoUrl = new URL('/favicon.webp', Astro.site)
const ogImageUrl = new URL('/ogp.png', Astro.site)

const siteName = 'OUCC - 大阪大学コンピュータークラブ'
const siteNameShort = 'OUCC'
const composedTitle = title === undefined ? siteName : `${title} | ${siteName}`
---

<!DOCTYPE html>
<html lang="ja" prefix="og: https://ogp.me/ns/website#">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="description" content={description} />
    <meta property="og:title" content={composedTitle} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={ogImageUrl.toString()} />
    <meta property="og:site_name" content={siteName} />
    <meta property="og:locale" content="ja_JP" />
    <meta property="og:type" content="website" />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:site" content="@OUCC" />
    <meta name="twitter:creator" content="@OUCC" />
    <link rel="canonical" href={canonicalURL} />
    <link rel="icon" href="/favicon.webp" />
    <title>{composedTitle}</title>
  </head>
  <body class="min-h-screen flex flex-col">
    <Header showJoinLink={showJoinLink} />
    <div class="flex-grow">
      <slot />
    </div>
    <Footer />
    <StructuredData
      data={{
        '@context': 'https://schema.org',
        '@type': 'WebSite',
        name: siteName,
        alternateName: siteNameShort,
        url: Astro.site.toString(),
      } satisfies WithContext<WebSite>}
    />
    <StructuredData
      data={{
        '@context': 'https://schema.org',
        '@type': 'Organization',
        logo: logoUrl.toString(),
        url: Astro.site.toString(),
      } satisfies WithContext<Organization>}
    />
    {
      title !== undefined && (
        <StructuredData
          data={
            {
              '@context': 'https://schema.org',
              '@type': 'BreadcrumbList',
              itemListElement: [
                {
                  '@type': 'ListItem',
                  position: 1,
                  name: title,
                  item: canonicalURL.toString(),
                },
              ],
            } satisfies WithContext<BreadcrumbList>
          }
        />
      )
    }
  </body>
</html>
<style is:global>
  html {
    /* 参考: https://ics.media/entry/200317/ */
    font-family: 'Helvetica Neue', Arial, 'Hiragino Kaku Gothic ProN',
      'Hiragino Sans', Meiryo, sans-serif;
  }
</style>

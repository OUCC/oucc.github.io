---
import defaultOgImage from '@/assets/avatar.svg'
import BlogListSection from '@/components/blog/BlogListSection.astro'
import BlogTitle from '@/components/blog/BlogTitle.astro'
import AuthorAboutSection from '@/components/blog/author/AuthorAboutSection.astro'
import AuthorIcon from '@/components/blog/icon/AuthorIcon.astro'
import BlogLayout from '@/layouts/BlogLayout.astro'
import { getImageWithSvgConvert } from '@/utils/getImageWithSvgConvert'
import { getCollection } from 'astro:content'
export async function getStaticPaths() {
  const authorEntries = await getCollection('authors')
  return authorEntries.map((author) => ({
    params: { slug: author.id },
    props: { author },
  }))
}

const { author } = Astro.props
const blogEntries = await getCollection('blogs')
const ogpPath = await (async () => {
  if (author.data.image !== undefined) {
    return (
      await getImageWithSvgConvert({ src: author.data.image, format: 'jpeg' })
    ).src
  } else if (author.data.github !== undefined) {
    return `https://github.com/${author.data.github}.png`
  } else {
    return (
      await getImageWithSvgConvert({ src: defaultOgImage, format: 'jpeg' })
    ).src
  }
})()

const isShowAboutSection = author.data.description || author.data.github
---

<BlogLayout
  title={author.data.name}
  description={author.data.description ??
    `${author.data.name}さんのプロフィール`}
  image={ogpPath}
  summarySize="summary"
>
  <BlogTitle title={author.data.name} background="white">
    <Fragment slot="icon">
      <AuthorIcon {...author.data} size={93} />
    </Fragment>
  </BlogTitle>
  {isShowAboutSection && <AuthorAboutSection author={author.data} />}
  <main class="flex flex-col h-full">
    <BlogListSection
      title={`${author.data.name} さんの投稿した記事`}
      blogs={blogEntries.filter((b) => b.data.author.id === author.id)}
    />
  </main>
</BlogLayout>
